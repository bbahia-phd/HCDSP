pwd()

dev_dir = "/home/bbahia/projects";
cd(dev_dir)
pwd()

using Pkg
Pkg.activate(joinpath(dev_dir,"HCDSP"))
Pkg.status()

using Revise
using LinearAlgebra
using FFTW
using HCDSP

include(joinpath(dev_dir,"dev/deblending/src/deblend_module.jl"))
import Main.deblend_module: BlendOp

using PyPlot
using SeisMain, SeisPlot

using HDF5

# data dir home
dir_path  = "/media/bbahia/DATA/seismic_data/iso_vsp01"

# read input data
dzz,hzz,ext_zz = SeisRead(joinpath(dir_path,"iso_vsp01_ozz.seis"));
pgd_fkt ,_,_   = SeisRead(joinpath(dir_path,"iso_vsp01_zz_pgd_fkt.seis"))
fp_fkt  ,_,_   = SeisRead(joinpath(dir_path,"iso_vsp01_zz_fp_fkt.seis"))
admm_fkt,_,_   = SeisRead(joinpath(dir_path,"iso_vsp01_zz_admm_fkt.seis"))
db,_,_         = SeisRead(joinpath(dir_path,"iso_vsp01_zz_pseudo.seis"))

# get geometry
sx = SeisMain.ExtractHeader(hzz,"sx");
sy = SeisMain.ExtractHeader(hzz,"sy");
gl = SeisMain.ExtractHeader(hzz,"gelev");

dt = ext_zz.d1;

nsline = 205; # number of source lines
ns = 205;     # number of sources within lines
nt = 218;     # number of time samples
nr = 31;      # number of receivers down-well
drz = 16.6 ;  # source and receiver spacing (m )

taxis = collect(0:nt-1).*dt
taxis[101]

j = 111; r = 15;
p=99;

a = max(maximum(vec(dzz)),maximum(vec(db)))*0.1

figname = "time_slice_($j)_($r)"
figure(figname,figsize=(10,5))

subplot(121)
SeisPlotTX(dzz[j,:,:,r],
cmap="gray",
vmin=-a,
vmax=a,
pclip=p,
fignum=figname)

subplot(122)
SeisPlotTX(db[j,:,:,r],
cmap="gray",
vmin=-a,
vmax=a,
pclip=p,
fignum=figname)

tight_layout()
gcf()