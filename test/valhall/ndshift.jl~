function ndshift(IN,δT)
    # Shift traces in IN by TT
    # Padding
    IN = copy(pgd_fkt);
    nin  = size(IN);
    npad = (2 * nextpow(2, nin[1]), nin[2:end]...);
    INF  = complex.( PadOp(IN,nin = nin, npad = npad, flag="fwd") );

    # Allocation
    OUT = zero(IN);
    OUTF = zero(INF);

    # Fourier in time
    fft!(INF,1);

    # Freq range
    ω_range = freq_indexes(0, 1000, dt, npad[1]);

    # Spatial indexes
    indx = CartesianIndices( npad[2:end] );
    dω = 2π/npad[1]/dt;

    # Loop over freqs
    @inbounds for iω in ω_range
        # shift
        ω = (iω-1)*dω;
        shift = exp.(1im*w .* δT[indx])
        OUTF[iω,indx] .= INF[iω,indx] .* shift
    end

    # Symmetries and ifft
    conj_symmetry!(OUTF)
end
